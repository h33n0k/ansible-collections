---
- name: Ensure Volume parent directory exists on host
  ansible.builtin.file:
    path: '{{ volume.host | dirname }}'
    state: directory
    recurse: false
    owner: root
    group: docker
    mode: '02770'

- name: Ensure Volume (directory) exist on host
  ansible.builtin.file:
    path: '{{ volume.host }}'
    state: directory
    recurse: false
    owner: root
    group: "{{ item.group | default('docker') }}"
    mode: '02770'
  when: item.type == 'directory'

- name: Check if volume exists on host
  ansible.builtin.stat:
    path: '{{ volume.host }}'
  when: volume.type == 'file'
  register: file_exists

- name: Ensure Volume (file) exist on host
  ansible.builtin.file:
    path: '{{ volume.host }}'
    state: touch
    owner: root
    group: "{{ item.group | default('docker') }}"
    mode: '0660'
  when: item.type == 'file' and not file_exists.stat.exists

- name: Ensure Volume has correct ACL
  ansible.posix.acl:
    path: '{{ volume.host }}'
    default: "{{ volume.type == 'directory' }}"
    entity: '{{ acl_entry.entity }}'
    etype: '{{ acl_entry.type }}'
    permissions: '{{ acl_entry.perms }}'
    state: present
  loop:
    - { type: user, entity: root, perms: "rw{{ 'x' if volume.type == 'directory' else '' }}" }
    - { type: group, entity: root, perms: "rw{{ 'x' if volume.type == 'directory' else '' }}" }
    - { type: other, entity: '', perms: '---' }
    - { type: group, entity: "{{ volume.group | default('docker') }}", perms: "rw{{ 'x' if volume.type == 'directory' else '' }}" }
    - { type: mask, entity: '', perms: "rw{{ 'x' if volume.type == 'directory' else '' }}" }
  loop_control:
    loop_var: acl_entry
    label: '{{ acl_entry.type }}:{{ acl_entry.entity | default("::") }}'
